automation:
  - alias: Update Tesla location as MQTT location updates
    initial_state: on
    trigger:
      - platform: mqtt
        topic: teslamate/cars/1/latitude
      - platform: mqtt
        topic: teslamate/cars/1/longitude
    action:
      - service: device_tracker.see
        data_template:
          dev_id: tesla_location
          gps:
            [
              "{{ states.sensor.tesla_latitude.state }}",
              "{{ states.sensor.tesla_longitude.state }}",
            ]
  - alias: Set timer if teslamate reports something is open to alert us
    initial_state: on
    trigger:
      - platform: mqtt
        topic: teslamate/cars/1/windows_open
        payload: 'true'
      - platform: mqtt
        topic: teslamate/cars/1/doors_open
        payload: 'true'
      - platform: mqtt
        topic: teslamate/cars/1/trunk_open
        payload: 'true'
      - platform: mqtt
        topic: teslamate/cars/1/frunk_open
        payload: 'true'
    action:
      - service: script.turn_on
        data_template:
          entity_id: script.notify_tesla_{{trigger.topic.split('/')[3]}}

  - alias: Cancel notification if said door/window is closed
    initial_state: on
    trigger:
      - platform: mqtt
        topic: teslamate/cars/1/windows_open
        payload: 'false'
      - platform: mqtt
        topic: teslamate/cars/1/doors_open
        payload: 'false'
      - platform: mqtt
        topic: teslamate/cars/1/trunk_open
        payload: 'false'
      - platform: mqtt
        topic: teslamate/cars/1/frunk_open
        payload: 'false'
    action:
      - service: script.turn_off
        data_template:
          entity_id: script.notify_tesla_{{trigger.topic.split('/')[3]}}

known_device:
  tesla_location:
    hide_if_away: false
    icon: mdi:car
    mac:
    name: Tesla
    picture:
    track: true

sensor:
  - platform: mqtt
    name: tesla_battery_level
    state_topic: "teslamate/cars/1/battery_level"
    unit_of_measurement: "%"
    icon: mdi:battery-80

  - platform: mqtt
    name: tesla_charge_energy_added
    state_topic: "teslamate/cars/1/charge_energy_added"
    unit_of_measurement: "kW"
    icon: mdi:battery-80

  - platform: mqtt
    name: tesla_charge_limit
    state_topic: "teslamate/cars/1/charge_limit_soc"
    unit_of_measurement: "%"
    icon: mdi:battery-80

  - platform: mqtt
    name: tesla_charge_port_door_open
    state_topic: "teslamate/cars/1/charge_port_door_open"
    icon: mdi:car-door

  - platform: mqtt
    name: tesla_charger_actual_current
    state_topic: "teslamate/cars/1/charger_actual_current"
    unit_of_measurement: "A"
    icon: mdi:battery-80

  - platform: mqtt
    name: tesla_charger_phases
    state_topic: "teslamate/cars/1/charger_phases"
    icon: mdi:power-plug

  - platform: mqtt
    name: tesla_charger_power
    state_topic: "teslamate/cars/1/charger_power"
    unit_of_measurement: "W"
    icon: mdi:power-plug

  - platform: mqtt
    name: tesla_charger_voltage
    state_topic: "teslamate/cars/1/charger_voltage"
    unit_of_measurement: "V"
    icon: mdi:gauge

  - platform: mqtt
    name: tesla_display_name
    state_topic: "teslamate/cars/1/display_name"
    icon: mdi:car

  - platform: mqtt
    name: tesla_estimated_range
    state_topic: "teslamate/cars/1/est_battery_range_km"
    unit_of_measurement: "km"
    icon: mdi:map-marker-path

  - platform: mqtt
    name: tesla_healthy
    state_topic: "teslamate/cars/1/healthy"
    icon: mdi:car-connected

  - platform: mqtt
    name: tesla_ideal_range
    state_topic: "teslamate/cars/1/ideal_battery_range_km"
    unit_of_measurement: "km"
    icon: mdi:map-marker-path

  - platform: mqtt
    name: tesla_inside_temp
    state_topic: "teslamate/cars/1/inside_temp"
    unit_of_measurement: °C
    icon: mdi:thermometer-lines

  - platform: mqtt
    name: tesla_latitude
    state_topic: "teslamate/cars/1/latitude"
    icon: mdi:crosshairs-gps

  - platform: mqtt
    name: tesla_locked
    state_topic: "teslamate/cars/1/locked"
    icon: mdi:lock

  - platform: mqtt
    name: tesla_longitude
    state_topic: "teslamate/cars/1/longitude"
    icon: mdi:crosshairs-gps

  - platform: mqtt
    name: tesla_odometer
    state_topic: "teslamate/cars/1/odometer"
    unit_of_measurement: km
    icon: mdi:gauge

  - platform: mqtt
    name: tesla_outside_temp
    state_topic: "teslamate/cars/1/outside_temp"
    unit_of_measurement: °C
    icon: mdi:thermometer-lines

  - platform: template
    sensors:
      tesla_park_brake:
        friendly_name: Park Brake
        value_template: >-
          {% if is_state('sensor.tesla_shift_state', 'P') %}
            true
          {% else %}
            false
          {% endif %}

  - platform: mqtt
    name: tesla_plugged_in
    state_topic: "teslamate/cars/1/plugged_in"
    icon: mdi:power-plug

  - platform: mqtt
    name: tesla_rated_range
    state_topic: "teslamate/cars/1/rated_battery_range_km"
    unit_of_measurement: "km"
    icon: mdi:map-marker-path

  - platform: mqtt
    name: tesla_scheduled_charging_start
    state_topic: "teslamate/cars/1/scheduled_charging_start_time"
    icon: mdi:clock-outline

  - platform: mqtt
    name: tesla_sentry_mode
    state_topic: "teslamate/cars/1/sentry_mode"
    icon: mdi:cctv

  - platform: mqtt
    name: tesla_shift_state
    state_topic: "teslamate/cars/1/shift_state"
    icon: mdi:car-shift-pattern

  - platform: mqtt
    name: tesla_speed
    state_topic: "teslamate/cars/1/speed"
    icon: mdi:speedometer

  - platform: mqtt
    name: tesla_state
    state_topic: "teslamate/cars/1/state"
    icon: mdi:car-connected

  - platform: mqtt
    name: tesla_time_to_full_charge
    state_topic: "teslamate/cars/1/time_to_full_charge"
    icon: mdi:clock-outline

  - platform: mqtt
    name: tesla_windows_open
    state_topic: "teslamate/cars/1/windows_open"
    icon: mdi:car-door

  - platform: mqtt
    name: tesla_version
    state_topic: "teslamate/cars/1/version"
    icon: mdi:alphabetical

  - platform: mqtt
    name: tesla_update_available
    state_topic: "teslamate/cars/1/update_available"
    icon: mdi:gift

script:
  notify_tesla_open:
    alias: "Notify when something on the tesla is left open"
    sequence:
      - service: notify.mobile_app_mark_s_iphone
        data_template:
          title: "Tesla Notification"
          message: "You have left the {{ whatsopen }} open on the Tesla!"
      - service: script.turn_on
        data_template:
          entity_id: script.notify_tesla_{{ whatsopen }}_open

  notify_tesla_doors_open:
    sequence:
      - delay:
          minutes: 5
      - delay:
          seconds: "{{ range(0, 30)|random|int }}"
      - service: script.turn_on
        entity_id: script.notify_tesla_open
        data:
          variables:
            whatsopen: "doors"

  notify_tesla_frunk_open:
    sequence:
      - delay:
          minutes: 5
      - delay:
          seconds: "{{ range(0, 30)|random|int }}"
      - service: script.turn_on
        entity_id: script.notify_tesla_open
        data:
          variables:
            whatsopen: "frunk"

  notify_tesla_trunk_open:
    sequence:
      - delay:
          minutes: 5
      - delay:
          seconds: "{{ range(0, 30)|random|int }}"
      - service: script.turn_on
        entity_id: script.notify_tesla_open
        data:
          variables:
            whatsopen: "trunk"

  notify_tesla_windows_open:
    sequence:
      - delay:
          minutes: 5
      - delay:
          seconds: "{{ range(0, 30)|random|int }}"
      - service: script.turn_on
        entity_id: script.notify_tesla_open
        data:
          variables:
            whatsopen: "windows"
