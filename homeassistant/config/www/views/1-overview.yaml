  - title: Overview
    id: overview
    path: home
    icon: mdi:home-assistant
    type: module
    panel: true
    cards:
    - type: custom:layout-card
      column_num: 4
      layout: vertical
      # column_width: [1216px, 1216px, 1216px, 1216px]
      max_width: [10%, 30%, 30%, 30%]
      cards:
      - type: "custom:button-card"
        entity: person.mark_colling
        icon: mdi:shoe-print
        color: var(--primary-text-color)
        color_type: icon
        default_color: var(--disabled-text-color)
        tap_action:
          action: more-info
        name: Mark
        state:
          - value: 'home'
            icon: mdi:home-account
            color: var(--primary-color)
        # style: |
        #   ha-card {
        #     background:
        #     {% if is_state('person.mark_colling', 'home') %}
        #       var(--primary-color)
        #     {% else %}
        #       var(--disabled-text-color)
        #     {% endif %};
        #   }
        styles:
          card:
          - height: 98px
          # - font-size: 12px
          # - font-weight: bold
      - type: "custom:button-card"
        entity: person.katie
        icon: mdi:shoe-print
        color: var(--primary-text-color)
        color_type: icon
        default_color: var(--disabled-text-color)
        tap_action:
          action: more-info
        state:
          - value: 'home'
            icon: mdi:home-account
            color: var(--primary-color)
        name: Katie
        styles:
          card:
          - height: 98px
          # - font-size: 12px
          # - font-weight: bold
      - type: "custom:button-card"
        icon: mdi:music
        color: var(--primary-color)
        color_type: icon
        default_color: var(--primary-color)
        styles:
          card:
          - height: 98px
        name: SONOS
        tap_action:
          action: call-service
          service: script.turn_on
          service_data:
            entity_id: script.sonos_app
      - type: gauge
        name: Tesla
        unit: '%'
        entity: sensor.tez_battery_sensor
        severity:
          green: 65
          yellow: 25
          red: 0
        style: |
          ha-card {
            font-size: 1.2rem;
          }
      - type: "custom:button-card"
        entity: input_boolean.bins_put_out
        show_name: false
        show_entity_picture: true
        entity_picture: >
          [[[
            if (states['sensor.recycling_bin_next'].state == "True")
              return "/local/icons/bins/recycle_bin.svg";
            else
              return "/local/icons/bins/green_garden_waste.svg";
          ]]]
        # color: var(--primary-color)
        # color_type: icon
        # default_color: var(--primary-color)
        styles:
          card:
          - height: 98px
          - background-color: >
              [[[
                if (states['input_boolean.bins_put_out'].state == "off" && states['sensor.bins_should_be_out'].state == "True")
                  return "#de3429";
                else if (states['input_boolean.bins_put_out'].state == "on" && states['sensor.bins_should_be_out'].state == "False")
                  return "#ff9800";
                return "#00000000";
              ]]]
          - animation: >
              [[[
                if (states['input_boolean.bins_put_out'].state == "off" && states['sensor.bins_should_be_out'].state == "True")
                  return "blink 2s ease infinite";
                return "#00000000";
              ]]]
          entity_picture:
            - height: >
                [[[
                  if (states['sensor.recycling_bin_next'].state == "True")
                    return '80%';
                  else
                    return '60%';
                ]]]
            - width: 100%
        # name: Bins
        tap_action:
          action: toggle
          entity: input_boolean.bins_put_out
          confirmation:
            text: >
              [[[
                if (entity.state == "off")
                  return "Have you put the bins out?";
                else
                  return "Have you brought the bins in?";
              ]]]

        # conditions:
        #   - entity: timer.kitchen_echo
        #     state: active
        #     type: conditional
      - type: gauge
        name: Current Usage
        unit: 'W'
        entity: sensor.shelly_shem_b9ebe7_1_current_consumption
        severity:
          green: 0
          yellow: 350
          red: 450
        min: 0
        max: 1000
        style: |
          ha-card {
            font-size: 1.2rem;
          }
      - break
      - !include ../components/A_ground_floorplan.yaml
      - break
      - !include ../components/B_first_floorplan.yaml
      - type: custom:mini-media-player
        title: Sonos
        entity: media_player.living_room
        hide:
          power: false
          icon: true
          source: true
        speaker_group:
          platform: sonos
          show_group_count: true
          entities:
            - entity_id: media_player.living_room
              name: Sonos Living Room

      - break

      - type: weather-forecast
        entity: weather.dark_sky
        name: Walton-On-Thames
    #   - type: 'custom:config-template-card'
    #     entities:
    #       - sensor.template_kitchen_timer
    #     card:
    #       type: iframe
    #       url: >-
    #         ${'/local/custom_lovelace/jquery-countdown-master/index.html?timer='+states['sensor.template_kitchen_timer'].state}

    #   - type: custom:dark-sky-weather-card
    #     entity_current_conditions: sensor.dark_sky_icon
    #     entity_temperature: sensor.dark_sky_temperature
    #     entity_forecast_high_temp_1: sensor.dark_sky_daytime_high_temperature_1d
    #     entity_forecast_high_temp_2: sensor.dark_sky_daytime_high_temperature_2d
    #     entity_forecast_high_temp_3: sensor.dark_sky_daytime_high_temperature_3d
    #     entity_forecast_high_temp_4: sensor.dark_sky_daytime_high_temperature_4d
    #     entity_forecast_high_temp_5: sensor.dark_sky_daytime_high_temperature_5d
    #     entity_forecast_icon_1: sensor.dark_sky_icon_1d
    #     entity_forecast_icon_2: sensor.dark_sky_icon_2d
    #     entity_forecast_icon_3: sensor.dark_sky_icon_3d
    #     entity_forecast_icon_4: sensor.dark_sky_icon_4d
    #     entity_forecast_icon_5: sensor.dark_sky_icon_5d
    #     entity_forecast_low_temp_1: sensor.dark_sky_overnight_low_temperature_0d
    #     entity_forecast_low_temp_2: sensor.dark_sky_overnight_low_temperature_1d
    #     entity_forecast_low_temp_3: sensor.dark_sky_overnight_low_temperature_2d
    #     entity_forecast_low_temp_4: sensor.dark_sky_overnight_low_temperature_3d
    #     entity_forecast_low_temp_5: sensor.dark_sky_overnight_low_temperature_4d
    #     entity_summary_1: sensor.dark_sky_summary_1d
    #     entity_summary_2: sensor.dark_sky_summary_2d
    #     entity_summary_3: sensor.dark_sky_summary_3d
    #     entity_summary_4: sensor.dark_sky_summary_4d
    #     entity_summary_5: sensor.dark_sky_summary_5d
    #     # entity_visibility: sensor.dark_sky_visibility
    #     # entity_daytime_high: sensor.dark_sky_daytime_high_temperature_0d
    #     # entity_wind_bearing: sensor.dark_sky_wind_bearing
    #     # entity_wind_speed: sensor.dark_sky_wind_speed
    #     # entity_humidity: sensor.dark_sky_humidity
    #     # entity_pressure: sensor.dark_sky_pressure
    #     entity_apparent_temp: sensor.dark_sky_apparent_temperature
    #     entity_daily_summary: sensor.dark_sky_daily_summary
    #     # entity_pop: sensor.dark_sky_precip_probability
    #     entity_pop_intensity: sensor.dark_sky_precip_intensity
    #     entity_pop_1: sensor.dark_sky_precip_probability_1d
    #     entity_pop_2: sensor.dark_sky_precip_probability_2d
    #     entity_pop_3: sensor.dark_sky_precip_probability_3d
    #     entity_pop_4: sensor.dark_sky_precip_probability_4d
    #     entity_pop_5: sensor.dark_sky_precip_probability_5d
    #     entity_sun: sun.sun
    #     static_icons: true

      # - type: custom:flex-table-card
      #   # title: Trains to Waterloo
      #   max_rows: 5
      #   entities:
      #     include: sensor.next_train_to_wat
      #   columns:
      #     # - name: Origin
      #     #   attr_as_list: next_trains
      #     #   modify: x.origin_name
      #     # - name: Destination
      #     #   attr_as_list: next_trains
      #     #   modify: x.destination_name
      #     - name: Next Train to WAT
      #       attr_as_list: next_trains
      #       modify: x.scheduled
      #     - name: Est
      #       attr_as_list: next_trains
      #       modify: x.estimated
      #     - name: Status
      #       attr_as_list: next_trains
      #       modify: x.status
      #   on_empty:
      #     # to hide the entire flex-table (default: false)
      #     hide: true
      #     # if `!hide` show the following text instead of content
      #     # text: "No trains to show"
      #     # do not show the column headers (default: false)
      #     hide_headers: true

      # - type: glance
      #   title: Lights
      #   show_name: true
      #   show_state: true
      #   entities:
      #     - switch.living_room_ceiling
      #     - light.dining_room_ceiling
      #     - switch.test_room_light

      # - type: vertical-stack
      #   cards:
      #   - type: markdown
      #     title: Lovelace
      #     content: >
      #       Welcome to your **Lovelace UI**.
